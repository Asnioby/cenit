%form{method: 'post', class: 'form-horizontal denser'}
  - ready = true
  - if @object.pull_parameters.present?
    - ready = false
    %h4= t('admin.actions.pull_collection.fill_parameters')
    .fieldset
      - @object.pull_parameters.each do |pull_parameter|
        .control-group{class: (error = @missing_parameters.include?(pull_parameter.parameter)) ? 'error' : ''}
          %label.control-label
            = pull_parameter.label
          .controls
            %input{type: 'text', size: 50, name: "pull_parameters[#{pull_parameter.parameter}]", value:  @parameter_values[pull_parameter.parameter]}
            - if error
              %span{class: 'help-inline'}
                = "can't be blank"
            %p.help-block
              = 'Required'
  - unless @ids_to_update.empty?
    - ready = false
    %h4{style: 'color:#b94a48'}= t('admin.actions.pull_collection.update_warning')
    .fieldset
      - @ids_to_update.each do |key, records|
        .control-group
          %label.control-label
            = key.titleize
          .controls
            - am = RailsAdmin::Config.model(records.first.class).abstract_model
            = records.collect { |record| link_to(record.name, url_for(action: action(:show, am, record).action_name, model_name: record.class.to_s, id: record.id), class: 'pjax') }.to_sentence.html_safe
  - if ready
    %h4= t('admin.actions.pull_collection.ready')
  .form-actions
    %button.btn.btn-primary{type: 'submit', name: '_pull', :'data-disable-with' => t('admin.actions.pull_collection.submit')}
      %i{class: @action.try(:link_icon)}
      = t('admin.actions.pull_collection.submit')
    %span.extra_buttons
      %button.btn{type: 'submit', name: '_continue', :'data-disable-with' => t('admin.form.cancel')}
        %i.icon-remove
        = t('admin.form.cancel')
